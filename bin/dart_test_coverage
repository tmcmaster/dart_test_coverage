#!/bin/sh

if [ ! -f "pubspec.yaml" ];
then
  echo "Run from the project directory.";
  exit 1;
fi

APP_DIR=$(dirname $(dirname $(which $(basename "$0"))));
CSS_FILE=${APP_DIR}/include/coverage.css

PACKAGE_NAME=$(grep  '^name:[\s+]*' pubspec.yaml |sed 's/\:[ ]*/\|/g' |cut -f2 -d \|);
IGNORE_COMMENT="// ignore: unused_import";
FILE=test/coverage_helper_test.dart

## Create a file to make sure all of the dart files are picked up by the test coverage.
(echo "// Helper file to make coverage work for all dart files", echo "// ignore_for_file: unused_import") > "$FILE";
find lib -not -name '*.g.dart' -not -name '*.freezed.dart' -and -name '*.dart' \
  |awk -v ignore="${IGNORE_COMMENT}" -v prefix="package:${PACKAGE_NAME}" -F'lib/' \
      '{printf "import '\''%s/%s'\''; %s\n", prefix, $2, ignore}' >> $FILE
echo "void main(){}" >> $FILE

LCOV_FILE="coverage/riverpod_test_lcov.info";

# Run the test coverage
dart run test_cov

# Strip out coverage data for generated classes
lcov --quiet --remove "coverage/lcov.info" '**/coverage_helper_test.dart' '**/*.g.dart' '**/*.freezed.dart' -o "${LCOV_FILE}"

# Generate an HTML version of the test coverage data
genhtml --quiet -o coverage/html  --legend --css-file ${CSS_FILE} --title "${PACKAGE_NAME}" "${LCOV_FILE}"

if [ "$1" == "--view" ];
then
  # View the test coverage report
  open ./coverage/html/index.html
fi
